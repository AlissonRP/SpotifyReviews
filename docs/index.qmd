---
title: "Um Ensaio Sobre os Sentimentos"
subtitle: "Dos Reviews do Spotify"
title-slide-attributes:
  data-background-image: "imgs/spotify_black.jpg"
  data-background-opacity: "0.7"
author: "<br> Alisson Rosa"
format: 
    revealjs:
        theme: [serif, custom.scss]
        preview-links: auto
        chalkboard: true
        transition: fade
        controls: true
lang: pt
---

## Introduzindo o Spotify?  {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

::: {.incremental}
- M√∫sicas, Podcasts etc

<br />

- *Review* em texto e *Review* num√©rico (estrelas)

<br />

- Classificar o **Sentimento** do autor do *review*

<br />

:::


```{python}
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import numpy as np


from sklearn.feature_extraction.text import CountVectorizer
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import RocCurveDisplay
from sklearn.linear_model import LogisticRegression

from utils.utils import time_plot, total_variable, my_wc, Display
prm={"figure.figsize":(9, 4),
'figure.dpi':150}
plt.rcParams.update(prm)
sns.set_palette("viridis")
sns.set_style("whitegrid")
```

```{python}
df = pd.read_csv("../data/reviews.csv")
```



## Textos e Seus Problemas {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

* **Cada pessoa tem sua maneira de escrever**

<br />

::: {.incremental}
- Aquele seu bolo estava muito bom ü•∞ü•∞ü•∞

- Aquele seu bolo estava muito bom...

- Aquele seu bolo estava muito bom!!!

- Aquele seu bolo estava muito bom ü§Æü§Æü§Æ

<br />

:::

::: footer
n√£o √© uma indireta
:::


## An√°lise B√°sica {background-image="imgs/sptfy_back.jpg" background-opacity=0.02}

```{python}
#| label: fig-prop
#| fig-cap: "Propor√ß√£o das Avalia√ß√µes por Estrelas"
grouped_data = df.groupby("Rating", as_index=False).size()
grouped_data = grouped_data.assign(Proporcao=grouped_data["size"] / grouped_data["size"].sum())
sns.barplot(data= grouped_data, x="Rating", y="Proporcao")
plt.xlabel("Avalia√ß√£o")
plt.ylabel("Propor√ß√£o");


```


## An√°lise B√°sica {background-image="imgs/sptfy_back.jpg" background-opacity=0.06}

```{python}
df['Time_submitted'] = pd.to_datetime(df['Time_submitted'])

#%%
df['month'] = df['Time_submitted'].apply(lambda x: x.month)
df['hour'] = df['Time_submitted'].apply(lambda x: x.hour)
df['day'] = df['Time_submitted'].apply(lambda x: x.day)
```


```{python}
#| label: fig-plt
#| fig-cap: "Comportamento dos Reviews ao longo dos meses"
time_plot(df, 'month')
```

## An√°lise B√°sica {background-image="imgs/sptfy_back.jpg" background-opacity=0.05}


```{python}
#| fig-cap: "Comportamento dos Reviews ao longo das horas"

time_plot(df, 'hour')

```


## Uso de Palavras {background-image="imgs/sptfy_back.jpg" background-opacity=0.05}

```{python}
#| fig-pos: 'h'
#| fig-cap: "Wordcloud para Reviews de 5 estrelas"
my_wc(df, 4)
```


## Uso de Palavras {background-image="imgs/sptfy_back.jpg" background-opacity=0.06}

```{python}
#| fig-pos: 'h'
#| fig-cap: "Wordcloud para Reviews de 1 estrela"
my_wc(df, 'podre')
```

## Processamento do Texto {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

::: {.incremental}
* Remo√ß√£o de Stop Words

* Remo√ß√£o de URLs e tags

* Remo√ß√£o de Espa√ßos indevidos


```{shell}
data["Review"]=data["Review"].apply(lambda x: re.sub(r'(http|https|ftp|ssh)://([\w_-]+(?:(?:\.[\w_-]+)+))([\w.,@?^=%&:/~+#-]*[\w@?^=%&/~+#-])?', '' , str(x)))
```

:::



```{python}
df['Review_words'] = [len(x.split()) for x in df['Review']]
rating = df['Rating'] 
df['Sentiment'] = np.where((1 <= rating) & (rating <= 2), 'negativo', 
np.where((4 <=rating) & (rating<=5), 'positivo', 'neutral'))
```

```{python}
stop_words = set(stopwords.words("english"))
stop_words.update(["app", "song", "Spotify", "music", "spotify"])

df['Review_wsw'] = df['Review'].apply(lambda x: " ".join(x for x in x.split() if x not in stop_words))

```



## Processamento do Texto {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

```{python}
#| fig-cap: "Wordcloud para Reviews de 5 estrelas sem Stop Words"
my_wc(df, var = "Review_wsw", Filter = 4)
```

## Quase Sentimentos {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

<br />

* 1 a 2 Estrelas: Negativo

<br />

* 3 Estrelas: Neutro

<br />

* 4 a 5 Estrelas: Positivo

## Uso de Palavras {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

<br />

* **Existe diferen√ßa nos *review* escritos?**

<br />

## Palavras e Reviews Negativos {background-image="imgs/sptfy_back.jpg" background-opacity=0.07}


```{python}
Display(df[df['Sentiment'] == 'negativo'][['Review_words']].rename(columns={"Review_words": "Total de Palavras"}).describe().to_markdown())
```

![](https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Arrow_east.svg/1200px-Arrow_east.svg.png){.absolute top=390 left=10 width="28" height="90"}


## Palavras e Reviews Positivos {background-image="imgs/sptfy_back.jpg" background-opacity=0.07}


```{python}
Display(df[df['Sentiment'] == 'positivo'][['Review_words']].rename(columns={"Review_words": "Total de Palavras"}).describe().to_markdown())
```


## Sentimentos Temporalmente {background-image="imgs/sptfy_back.jpg" background-opacity=0.07}

```{python}


fig, ax = plt.subplots(1, 2)
ax[0].set_title("(a)")
ax[0].set_ylabel("Total")
ax[1].set_ylabel("Total")
ax[1].set_title("(b)")
sns.lineplot(data=df[df['Review_words']< 180], y='Review_words', x='day', hue='Sentiment', ax=ax[0])
ax[0].get_legend().remove()
sns.lineplot(data=df[df['Review_words']< 180], y='Review_words', x='month', hue='Sentiment', ax=ax[1])
fig.show()
```


## Covari√°veis {background-image="imgs/sptfy_back.jpg" background-opacity=0.11}

::: {.incremental}
* Modelos manipulam **matrizes**

<br>

* Como transformar o texto em matriz?

:::

## Count Vectorization {background-image="imgs/sptfy_back.jpg" background-opacity=0.08}

![Exemplo de CV](imgs/vector.jpg){fig-align="center"}

## Modelos {background-image="imgs/sptfy_back.jpg" background-opacity=0.05}

![](imgs/models.png){.absolute  left=10 width="1080" height="790"}

## Ep√≠logo {background-image="imgs/sptfy_back.jpg" background-opacity=0.1}

* Existe um problema

::: {.incremental}



:::

::: footer
ao menos um problema*
:::