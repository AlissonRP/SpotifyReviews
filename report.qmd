---
title: "Um Breve Ensaio Sobre os Sentimentos..."
subtitle:  Dos Reviews do Spotify
author: "Alisson Rosa"
format: 
  pdf:
    documentclass: report
    include-in-header: 
      text: |
        \usepackage{float}
    number-sections: true
    fig-width: 5.9
    fig-height: 2.5
    indent: 2m
    geometry:
      - top=20mm
      - left=18mm
      - right=18mm
      - heightrounded
execute:
  warning: false
  echo: false
lang: pt

---

\section{\centering Introdução}

O Spotify é um serviço digital que dá acesso instantâneo a milhões de músicas, podcasts, vídeos e outros conteúdos de criadores no mundo todo. Pode ser acessado pelo *browser*, sendo possível também baixar o aplicativo, estando disponível para diversas plataformas digitais. 
Nesse ensaio vamos analisar os *reviews* feitos na Play Store sobre a versão para android, dessa maneira vamos examinar o comportamento dos reviews (estrelas), junto com o texto deixado pelo autor.


\subsection{Uma visão Geral das Avaliações}

Como é de conhecimento geral, as reclamações fazem mais barulho que os parabéns, nesse sentido espera-se uma quantidade considerável de avaliações nota 1 do aplicativo, por inúmeras questões, pois expectativas não satisfeitas, geram frustrações, e uma maneira de destilar tamanha frustração é jogar toda a fúria no review na Play Store. Avaliamos então pela figura NN, a proporção das avaliações


```{python}
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import numpy as np

from utils.utils import time_plot, total_variable, my_wc
prm={"figure.figsize":(9, 4),
'figure.dpi':150}
plt.rcParams.update(prm)
sns.set_palette("viridis")
```

```{python}
df = pd.read_csv("data/reviews.csv")
```

```{python}
grouped_data = df.groupby("Rating", as_index=False).size()
grouped_data = grouped_data.assign(Proporcao=grouped_data["size"] / grouped_data["size"].sum())
sns.barplot(data= grouped_data, x="Rating", y="Proporcao")
plt.xlabel("Avaliação")
plt.ylabel("Proporção");


```




Notamos assim uma disputa entre amor e ódio em relação ao aplicativo.


A partir de agora vamos aprofundar a análise desses reviews e relação ao tempo, e em seções seguintes aprofundaremos ainda mais a análise em relação aos reviews considerando também o texto deixado pelo autor.

\subsection{Analisando os Review de Maneira Temporal}

```{python}
df['Time_submitted'] = pd.to_datetime(df['Time_submitted'])

#%%
df['month'] = df['Time_submitted'].apply(lambda x: x.month)
df['hour'] = df['Time_submitted'].apply(lambda x: x.hour)
df['day'] = df['Time_submitted'].apply(lambda x: x.day)
```

Vamos nessa subseção averiguar os review em termos de contagens e valores médios referentes, a mês, dia e hora.

\subsubsection{Review Ao longo dos Meses}

```{python}
time_plot(df, 'month')
```


\subsubsection{Review Ao longo dos Dias}

```{python}
time_plot(df, 'day')

```


\subsubsection{Review Ao longo das Horas}


```{python}
time_plot(df, 'hour')

```

\section{\centering Texto  e seus ajustes}

Em toda análise textual é necessária um bom pré processamento dos dados, portanto é isso que vamos tratar nessa seção. Realizaremos:

* Remoção de Stop Words^[Stop Words são palavras as quais possuem uma alta taxa de frequência no texto, mas carregam pouca informações para a análise a ser realizada.]

* Lematização^[Tarefa de determinar se duas palavras tem a mesma raiz, apesar de diferença de "estrutura"]

* Remoção de Espaços indevidos

Porém antes do processamento, vejamos o comportamento da frequência das palavras:
Para o casos de 5 estrelas notamos palavras positivas como "love", "great"  e "easy" em destaque.

```{python}
#| fig-pos: 't'
#| fig-cap: "Wordcloud para Reviews de 5 estrelas"
my_wc(df, 4)
```
E para o caso de reviews de 1 estrela nota-se palavras referentes a problemas como "fix", "even" e "issue"

```{python}
#| fig-pos: 'h'
#| fig-cap: "Wordcloud para Reviews de 1 estrela"
my_wc(df, 'podre')
```
Nota-se em ambos os casos que palavras como "Spotify", "Song", "App" e "Song" possuem uma alta frequência, porém não agregam muita informação para a análise, assim é interessante a remoção delas.

\subsubsection{Um ajuste dos Reviews}
Vamos aqui nessa subseção recategorizar a variável numérica da avaliação:
* 1 a 2 Estrelas: Negativo
* 3 Estrelas: Neutro
* 4 a 5 Estrelas: Positivo

Portanto a partir desse momento, quando refere-se a review positivos, estamos nos referenciando a 4 a 5 estrelas e assim por diante.


```{python}
df['Review_words'] = [len(x.split()) for x in df['Review']]
rating = df['Rating'] 
df['Sentiment'] = np.where((1 <= rating) & (rating <= 2), 'negative', 
np.where((4 <=rating) & (rating<=5), 'positive', 'neutral'))
```

\subsection{Análise Sem as Stop Words}

Vamos nessa subseção remover as stops words, fazer algumas análises em relação aos reviews agora categorizados e também refazer algumas análises da seção anterior.


```{python}
stop_words = set(stopwords.words("english"))
stop_words.update(["app", "song", "Spotify", "music", "spotify"])

df['Review_wsw'] = df['Review'].apply(lambda x: " ".join(x for x in x.split() if x not in stop_words))

```



```{python}
#| fig-cap: "Wordcloud para Reviews de 5 estrelas sem StopWords"
my_wc(df, var = "Review_wsw", Filter = 4)
```


```{python}
#| fig-cap: "Wordcloud para Reviews de 1 estrela sem StopWords"
my_wc(df, var = "Review_wsw", Filter = "podre")
```
## Palavras em Review

Vejamos agora a quantidade de palavras pelos Reviews

### Para Reviews Negativos

```{python}
df[df['Sentiment'] == 'negatives'][['Review_words']].describe()
```

```{python}
sns.boxplot(data=df[df["Sentiment"] == 'negative'], x="Review_words")

```


### Para Reviews Positivos

```{python}
df[df['Sentiment'] == 'positives'][['Review_words']].describe()
```



```{python}
sns.boxplot(data=df[df["Sentiment"] == 'positive'], x="Review_words")
```

## Revisitando o tempo


```{python}
#| fig-cap: "(a) Total de Palavras por Review ao longo dos dias, (b) Total de Palavras por Review ao longo dos meses"
fig, ax = plt.subplots(1, 2)
ax[0].set_title("(a)")
ax[0].set_ylabel("Total")
ax[1].set_ylabel("Total")
ax[1].set_title("(b)")
sns.lineplot(data=df[df['Review_words']< 180], y='Review_words', x='day', hue='Sentiment', ax=ax[0])
ax[0].get_legend().remove()
sns.lineplot(data=df[df['Review_words']< 180], y='Review_words', x='month', hue='Sentiment', ax=ax[1])
fig.show()
```

\section{\centering Modelagem}

\subsection{Desenvolvendo as Covariáveis}
Como vimos, não temos covariáveis "automaticas" no dataset, assim faz-se necessário criar baseado no Review escrito, vamos aqui utilizar de duas técnicas, a saber Vetores  de Contagens^[Count Vectorization] e TF-DF. Dessa maneira queremos avaliar o sentimento do usuário ao fazer o review escrito, por questões técnicas^[Técnicas aqui quer dizer: Não foi apresentado no curso] vamos utilizar somente os reviews que são positivos e negativos, dessa maneira removendo os classificados como neutros, tornando-se um problema de classificação binária.

\subsubsection{Count Vectorization}
A ideia é bastante simples, vamos criar uma vetor para cada palavra única no banco de dados e associar a quantidade de vezes que aparece no review.
![Elephant](docs/imgs/vector.jpg)

\subsubsection{TF-DF}

